<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>经验介绍</title>
  
  <subtitle>Antarx is the heart of Scorpio</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://antarx.com/"/>
  <updated>2018-05-21T03:22:30.675Z</updated>
  <id>https://antarx.com/</id>
  
  <author>
    <name>Gawain Antarx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LaTeX排版学术论文工具链</title>
    <link href="https://antarx.com/2018/05/21/latex-toolchain/"/>
    <id>https://antarx.com/2018/05/21/latex-toolchain/</id>
    <published>2018-05-21T02:48:35.000Z</published>
    <updated>2018-05-21T03:22:30.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LaTeX-排版工具链"><a href="#LaTeX-排版工具链" class="headerlink" title="LaTeX 排版工具链"></a>LaTeX 排版工具链</h1><p> 这里整理了 $\LaTeX$ 排版学术论文的工具链。根据自己的实践和大家的留言补充定期更新。<br><a id="more"></a></p><h2 id="操作系统，软件等"><a href="#操作系统，软件等" class="headerlink" title="操作系统，软件等"></a>操作系统，软件等</h2><p>$\LaTeX$ 可以在 Windows、Linux 和 macOS 平台上运行。Windows 上可以安装 MikTex，Linux 上有 TeX Live，考虑美观度和排版过程的愉悦度，本人使用的 LaTeX 排版环境大致如下：</p><ul><li>OS : macOS(Darwin)</li><li>编辑器：<a href="https://code.visualstudio.com" target="_blank" rel="external">Microsoft VSCode</a></li><li>插件：LaTeX Workshop</li><li>$\LaTeX$ 软件：MacTeX 工具包</li><li>PDF 阅读工具：skim</li></ul><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p><a href="https://github.com/uefs/ieee-template-latex/blob/master/bare_jrnl.tex" target="_blank" rel="external">IEEE tran</a><br><code>bare_jrnl.tex</code>最新版本应该是 v1.7，但在网上好像找不到这个最新的版本，准备整理一个多文件编译的版本放到 GitHub 上。</p><p>欢迎留言补充其它模板。:)</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p><a href="http://mohu.org/info/symbols/symbols.htm" target="_blank" rel="external">数学符号集</a></p><h2 id="插入伪代码（算法宏包的相关使用）"><a href="#插入伪代码（算法宏包的相关使用）" class="headerlink" title="插入伪代码（算法宏包的相关使用）"></a>插入伪代码（算法宏包的相关使用）</h2><p><a href="https://www.zybuluo.com/jfruan/note/720298" target="_blank" rel="external">LaTeX算法排版</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>使用<code>listings</code>宏包。<a href="https://en.wikibooks.org/wiki/LaTeX/Source_Code_Listings" target="_blank" rel="external">LaTeX/Source Code Listings</a><br>但这个宏包没有 golang 语法高亮支持的！要使 golang 语法高亮，可添加宏包<a href="https://github.com/julienc91/listings-golang" target="_blank" rel="external">listings-golang</a></p><h2 id="图片与表格"><a href="#图片与表格" class="headerlink" title="图片与表格"></a>图片与表格</h2><p>首先要理解浮动体的概念，<a href="https://liam0205.me/2017/04/30/floats-in-LaTeX-the-positioning-algorithm/" target="_blank" rel="external">LaTeX 中的浮动体：浮动算法</a></p><h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><p><a href="http://www.latexstudio.net" target="_blank" rel="external">LaTeX 开源小屋</a><br><a href="https://github.com/luongvo209/Begin-Latex-in-minutes" target="_blank" rel="external">Begin LaTeX in minutes</a><br><a href="https://book.douban.com/subject/24703731/" target="_blank" rel="external">LaTeX 入门</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LaTeX-排版工具链&quot;&gt;&lt;a href=&quot;#LaTeX-排版工具链&quot; class=&quot;headerlink&quot; title=&quot;LaTeX 排版工具链&quot;&gt;&lt;/a&gt;LaTeX 排版工具链&lt;/h1&gt;&lt;p&gt; 这里整理了 $\LaTeX$ 排版学术论文的工具链。根据自己的实践和大家的留言补充定期更新。&lt;br&gt;
    
    </summary>
    
    
      <category term="LaTeX" scheme="https://antarx.com/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移腾讯云小记</title>
    <link href="https://antarx.com/2018/05/11/hexossl/"/>
    <id>https://antarx.com/2018/05/11/hexossl/</id>
    <published>2018-05-11T09:30:58.000Z</published>
    <updated>2018-05-14T03:12:19.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客迁移腾讯云实战记录"><a href="#博客迁移腾讯云实战记录" class="headerlink" title="博客迁移腾讯云实战记录"></a>博客迁移腾讯云实战记录</h1><p>源于年初的一次突发奇想，将博客站点迁移到了腾讯云，五月份终于完成了备案，然后添加了 HTTPS 支援，并完成容器化。在这里把折腾的过程记录下来。</p><a id="more"></a><h2 id="转移腾讯云"><a href="#转移腾讯云" class="headerlink" title="转移腾讯云"></a>转移腾讯云</h2><p>原来的博客是放到 github page 上面，访问 <strong>antarx.com</strong> 是通过 CNAME 文件解析到 gawainx.github.io，只需要在<code>config.yaml</code>配置好，写完直接<code>hexo d -g</code>完事。</p><p>迁移到腾讯云之后，还想每次部署都这么方便，就免不了完成一些相关工作。</p><h3 id="资源准备"><a href="#资源准备" class="headerlink" title="资源准备"></a>资源准备</h3><p>这里准备的资源主要就是服务器的购入，可以根据自己博客的规模需要选择合适的套餐。如果是学生党记得使用学生优惠。<br>买完服务器就是装系统的事，根据自己的使用习惯自行选择，我用的是 ubuntu16.04.<br>如果想容器化的话需要安装 Docker。</p><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure><h3 id="新建-git-裸仓库"><a href="#新建-git-裸仓库" class="headerlink" title="新建 git 裸仓库"></a>新建 git 裸仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/repo/</div><div class="line">sudo chown -R $USER:$USER /var/repo/</div><div class="line">sudo chmod -R 755 /var/repo/</div><div class="line"></div><div class="line">cd /var/repo/</div><div class="line">git init --bare hexo_static.git</div></pre></td></tr></table></figure><h3 id="创建存放-hexo-生成的网页的文件夹"><a href="#创建存放-hexo-生成的网页的文件夹" class="headerlink" title="创建存放 hexo 生成的网页的文件夹"></a>创建存放 hexo 生成的网页的文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /var/www/hexo</div><div class="line">sudo chown -R $USER:$USER /var/www/hexo</div><div class="line">sudo chmod -R 755 /var/www/hexo</div></pre></td></tr></table></figure><p>这两步要注意的是文件夹的 owner 问题，要实现自动部署的话一般新建一个 git 账户然后全权接管部署网页的相关工作，那么上面创建的两个文件夹在后期的 owner 记得要变更为 git 用户。</p><h3 id="创建-git-钩子"><a href="#创建-git-钩子" class="headerlink" title="创建 git 钩子"></a>创建 git 钩子</h3><p>在<code>hexo_static.git</code>文件夹的 hooks 目录下面新建钩子文件并写入如下代码，然后将文件变更成可执行文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vim /var/repo/hexo_static.git/hooks/post-receive</div><div class="line"></div><div class="line"># post-receive file content</div><div class="line"></div><div class="line">#!/bin/bash</div><div class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/hexo_static.git checkout -f</div><div class="line"></div><div class="line">chmod +x /var/repo/hexo_static.git/hooks/post-receive</div></pre></td></tr></table></figure><h3 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h3><p>所谓自动部署，就是在每次部署的时候不需要键入密码。<br>在自己电脑上，创建公钥，复制到剪贴板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;xx@xx.com&quot;</div><div class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p>服务器上，切换到 git 用户（没有的话请新建），输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">su git</div><div class="line">cd ~</div><div class="line">mkdir .ssh</div><div class="line">vim .ssh/authorized_keys</div><div class="line">#粘贴自己电脑的 公钥，然后保存</div><div class="line">chmod 600 ~/.ssh/authorized_keys</div><div class="line">chmod 700 ~/.ssh</div></pre></td></tr></table></figure><h3 id="本地-hexo-git-配置"><a href="#本地-hexo-git-配置" class="headerlink" title="本地 hexo-git 配置"></a>本地 hexo-git 配置</h3><p>在<code>config.yaml</code>键入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">    type:</span> git</div><div class="line"><span class="attr">    repo:</span> git@CVM 云服务器的IP地址:/var/repo/hexo_static</div><div class="line"><span class="attr">    branch:</span> master</div></pre></td></tr></table></figure><h2 id="添加-SSL-证书并容器化-Nginx"><a href="#添加-SSL-证书并容器化-Nginx" class="headerlink" title="添加 SSL 证书并容器化 Nginx"></a>添加 SSL 证书并容器化 Nginx</h2><p>Linux 配置软件向来复杂，所以毫不犹豫选用 docker 容器进行 Nginx 部署。<br>输入<code>docker pull nginx</code>拉取 Nginx 镜像。</p><p>首先基于镜像运行一个 nginx 容器，然后将容器里面的<code>/etc/nginx/</code>目录拷贝出来。可以看到文件内容如下图<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://antarx.cn/20180514104132_CkMTT5_Screenshot.jpeg" alt="Nginx 配置目录" title="">                </div>                <div class="image-caption">Nginx 配置目录</div>            </figure>。<br>这里顺带一提 Nginx 的两个配置文件，<code>nginx.conf</code>和<code>deafult.conf</code>，一般而言修改<code>nginx.conf</code>然后把<code>deafult</code>里面的内容注释掉会比较妥当。</p><h3 id="添加-SSL-证书"><a href="#添加-SSL-证书" class="headerlink" title="添加 SSL 证书"></a>添加 SSL 证书</h3><p>在拷贝出来的<code>nginx.conf</code>文件，在<code>http</code>的选型里面，加入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name 你的站点名称; #填写绑定证书的域名</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate /cert/你的证书.crt;</div><div class="line">        ssl_certificate_key /cert/你的私钥.key;</div><div class="line">        ssl_session_timeout 5m;</div><div class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</div><div class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</div><div class="line">        ssl_prefer_server_ciphers on;</div><div class="line">        location / &#123;</div><div class="line">            root   /blog; #站点目录</div><div class="line">            index  index.html index.htm;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>如果强制使用 HTTPS，还要加上以下配置，将80端口的流量重定向到443端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name antarx.com;</div><div class="line">        rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>这两个 server 是独立的，都加到<code>http</code>的配置里面。<br>顺带一提 Nginx 要求的证书是 PEM 格式。</p><p>运行博客容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -d -p 443:443 -p 80:80 -v `pwd`:/etc/nginx -v /var/www/hexo:/hexo -v &quot;$PWD/cert&quot;:/cert --name ng nginx</div></pre></td></tr></table></figure><p>这里注意到的是三个挂载卷，分别是配置文件，博客网页文件和证书文件。</p><p>容器运行之后，在腾讯云的域名管理里面添加 DNS 记录，OK，大功告成。</p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://cloud.tencent.com/developer/article/1004587" target="_blank" rel="external">在 Ubuntu 14.04 服务器上部署 Hexo 博客</a><br><a href="https://cloud.tencent.com/developer/article/1004839" target="_blank" rel="external">Hello Hexo之静态博客搭建+自动部署</a><br><a href="https://cloud.tencent.com/document/product/400/4143" target="_blank" rel="external">证书安装指引</a><br><a href="http://www.ruanyifeng.com/blog/2018/02/nginx-docker.html" target="_blank" rel="external">Nginx 容器教程（可能无法访问）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;博客迁移腾讯云实战记录&quot;&gt;&lt;a href=&quot;#博客迁移腾讯云实战记录&quot; class=&quot;headerlink&quot; title=&quot;博客迁移腾讯云实战记录&quot;&gt;&lt;/a&gt;博客迁移腾讯云实战记录&lt;/h1&gt;&lt;p&gt;源于年初的一次突发奇想，将博客站点迁移到了腾讯云，五月份终于完成了备案，然后添加了 HTTPS 支援，并完成容器化。在这里把折腾的过程记录下来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://antarx.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>第一篇</title>
    <link href="https://antarx.com/2018/05/08/init/"/>
    <id>https://antarx.com/2018/05/08/init/</id>
    <published>2018-05-08T01:58:58.000Z</published>
    <updated>2018-05-21T02:03:44.707Z</updated>
    
    <content type="html"><![CDATA[<p> 博客迁移腾讯云后第一贴!</p><p>以后多多指教!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 博客迁移腾讯云后第一贴!&lt;/p&gt;
&lt;p&gt;以后多多指教!&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="others" scheme="https://antarx.com/tags/others/"/>
    
  </entry>
  
</feed>
